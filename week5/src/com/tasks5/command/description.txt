

Створіть застосування, що реалізуватиме патерн Команда

Реалізуйте інтерфейс Command

public interface Command {
	public void execute();
}
      

для підтримки наступних команд:

    help
    Виводить на екран рядок Help executed
    echo <text>
    Виводить на екран рядок вказаний як текст <text>
    Наприклад
    echo Hello World
    виведе на екран
    Hello World
    date now
    Виводить на екран поточну дату в мілісекундах починаючи з 1 січня 1970 року. Для виводу дати скористайтеся рядком

    System.out.println(System.currentTimeMillis());

    exit
    Виводить на екран Goodbye!

Кожна з реалізацій це окремий клас!

Всю логіку обробки команд реалізйуте в класі

public class Application {
	public static void main(String[] args){
	//YOUR CODE COMES HERE
	}
}
      

В якості аргументів метод main буде отримувати команди. Наприклад для команди echo Hello World, метод main отримає масив з ДВУХ елементів {“echo”, “Hello World”}. Для команди date now також буде ДВА аргументи {“date”, “now”}.

При реалізації скористайтесь підтримкою поліморфізму часу виконання. Фактично Вам потрібно створювати екземпляр реалізації конкретної команди в залежності від набору вхідних даних. Типом посилання на конкретний екземпляр буде Command, таким чином виклик конкретної команди буде зведено до command.execute()

Підказка: для передачі даних в конкретну реалізацію команди скористайтеся конструктором.

У випадку коли команда не відома, або містить невірну кількість аргументів виведіть на екран напис Error

Приділіть особливу увагу перевірці вхідних даних! Наприклад: args може бути null або пустим

Зверніть увагу! Всі Ваші класи повинні знаходитися в пакеті com.tasks5.command Це означатиме, що кожен файл повинен містити package com.tasks5.command; на початку файлу.

Вміст всіх ваших файлів вставте у вікно нижче один під одним. Переконайтесь, що код кожного із класів починається рядком package com.tasks5.command;
